<?php
/**
 * Created by PhpStorm.
 * User: glen9
 * Date: 2018/9/4
 * Time: 11:59
 */

namespace app\admin\controller\financial;

use app\common\controller\Backend;
use think\Db;
class Monthlytabs extends Backend
{
    /**
     * @var null
     */
    protected $model = null;
    protected $noNeedRight = ['index', 'newcarMonthly', 'deductionsSucc', 'commontMethod', 'sedRisk'];

    /**
     *
     */
    public function _initialize()
    {
        return parent::_initialize(); // TODO: Change the autogenerated stub


    }

    /**
     * @return \think\response\Json|void
     */
    public function index()
    {
        $this->model = new \app\admin\model\NewcarMonthly;
//        pr();die;
        $this->loadlang('financial/monthlytabs');
        $this->view->assign([
            'did_total' => $this->model->where(['monthly_data'=>'failure','monthly_status'=>null])->count(),
            'has_total' => $this->model->where('monthly_status', 'has_been_sent')->count(),
            'dedu_total' => $this->model->where('monthly_data', 'success')->count()

        ]);
        return $this->view->fetch();
    }

    /**
     * 新车月供管理 （扣款失败）did_not_send
     * @return string
     * @throws \think\Exception
     */
    public function newcarMonthly()
    {
        $this->model = new \app\admin\model\NewcarMonthly;
        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('failure');
            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     * 已发送  has_been_sent
     * @throws \Exception
     */
    public function hasBeenSent()
    {
        $this->model = new \app\admin\model\NewcarMonthly;
        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('has_been_sent');

            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     * 扣款成功  deductions_succ
     * @return string|\think\response\Json
     * @throws \think\Exception
     *
     */
    public function deductionsSucc()
    {
        $this->model = new \app\admin\model\NewcarMonthly;

        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('success');

            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     *
     * 封装查询
     * @param $status 扣款状态 failure=失败 success=成功  has_been_sent=已发送给风控
     * @return array|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function commontMethod($statusD)
    {
        $this->model = new \app\admin\model\NewcarMonthly;
        //设置过滤方法
        $this->request->filter(['strip_tags']);
        //如果发送的来源是Selectpage，则转发到Selectpage
        if ($this->request->request('keyField')) {
            return $this->selectpage();
        }
        list($where, $sort, $order, $offset, $limit) = $this->buildparams('monthly_name');
        $total = $this->model
            ->where($where)
            ->where(function ($query) use ($statusD) {
                //如果等于扣款失败客户
                if ($statusD === 'failure') {
                    $query->where(['monthly_data' =>['=','failure'],'monthly_status'=>null]);
                } //如果等于已发送到风控
                if ($statusD === 'has_been_sent') {
                    $query->where(['monthly_status' => 'has_been_sent']);
                }
                if ($statusD === 'success') {
                    $query->where(['monthly_data' => 'success']);
                }
            })
            ->order($sort, $order)
            ->count();

        $list = $this->model
            ->where($where)
            ->where(function ($query) use ($statusD) {
                //如果等于扣款失败客户
                if ($statusD === 'failure') {
                    $query->where(['monthly_data' =>['=','failure'],'monthly_status'=>null]);
                } //如果等于已发送到风控
                if ($statusD ==='has_been_sent') {
                    $query->where(['monthly_status' => 'has_been_sent']);
                }
                if ($statusD === 'success') {
                    $query->where(['monthly_data' => 'success']);
                }
            })
            ->order($sort, $order)
            ->limit($offset, $limit)
            ->select();

        $list = collection($list)->toArray();
        $result = array("total" => $total, "rows" => $list);
        return $result;

    }

    /**
     * 发送到风控
     * @throws \Exception
     */
    public function sedRisk()
    {
        $this->model = new \app\admin\model\NewcarMonthly;
        if ($this->request->isAjax()) {
            $id = input('post.');
            foreach ((array)$id['ids'] as $key => $value) {
                $new_params[] = ['id' => $value, 'monthly_status' => 'has_been_sent'];
            }
            if ($this->model->saveAll($new_params)) {
//                //发送邮箱
//                $data = send_monthly_to_risk();
//                //接收人
//                $receiver = DB::name('admin')->where('rule_message', '')->value('email');
//
//                $email = new Email;
//                $result_ss = $email
//                    ->to($receiver)
//                    ->subject($data['subject'])
//                    ->message($data['message'])
//                    ->send();
                $this->success();
            } else {
                $this->error();
            }
        }

    }


    /**新车下载导入模板
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     */
    public function downloadExcelTemplate()
    {
        // 新建一个excel对象 大神已经加入了PHPExcel 不用引了 直接用！
        $objPHPExcel = new \PHPExcel();  //在vendor目录下 \不能少 否则报错
        /*设置表头*/
        // $objPHPExcel->getActiveSheet()->mergeCells('A1:P1');//合并第一行的单元格
        // $objPHPExcel->getActiveSheet()->mergeCells('A2:P2');//合并第二行的单元格
        // $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        // $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', '客户信息导入模板表');//标题
        // $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);      // 第一行的默认高度

        $myrow = 1;/*表头所需要行数的变量，方便以后修改*/
        /*表头数据填充*/
        $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);/*设置行高*/
        $objPHPExcel->setActiveSheetIndex(0)//设置一张sheet为活动表 添加表头信息
        // ->setCellValue('A' . $myrow, 'id')
        ->setCellValue('A' . $myrow, '账号')
            ->setCellValue('B' . $myrow, '姓名')
            ->setCellValue('C' . $myrow, '联系电话')
            ->setCellValue('D' . $myrow, '车型')
            ->setCellValue('E' . $myrow, '金额')
            ->setCellValue('F' . $myrow, '状态')
            ->setCellValue('G' . $myrow, '失败原因')
            ->setCellValue('H' . $myrow, '欠款月份')
            ->setCellValue('I' . $myrow, '公司')
            ->setCellValue('J' . $myrow, '车牌')
            ->setCellValue('K' . $myrow, '欠款月数')
            ->setCellValue('L' . $myrow, '备注');
        //浏览器交互 导出
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="月供信息导入模板表.xlsx"');
        header('Cache-Control: max-age=0');
        // If you're serving to IE 9, then the following may be needed
        header('Cache-Control: max-age=1');

        // If you're serving to IE over SSL, then the following may be needed
        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter->save('php://output');
        exit;
    }

    /**
     * 租车模板下载
     *
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     */
    public function rentalcarDownloadExcelTemplate()
    {
        // 新建一个excel对象 大神已经加入了PHPExcel 不用引了 直接用！
        $objPHPExcel = new \PHPExcel();  //在vendor目录下 \不能少 否则报错
        /*设置表头*/
        // $objPHPExcel->getActiveSheet()->mergeCells('A1:P1');//合并第一行的单元格
        // $objPHPExcel->getActiveSheet()->mergeCells('A2:P2');//合并第二行的单元格
        // $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        // $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', '客户信息导入模板表');//标题
        // $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);      // 第一行的默认高度

        $myrow = 1;/*表头所需要行数的变量，方便以后修改*/
        /*表头数据填充*/
        $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);/*设置行高*/
        $objPHPExcel->setActiveSheetIndex(0)//设置一张sheet为活动表 添加表头信息
        // ->setCellValue('A' . $myrow, 'id')
        ->setCellValue('A' . $myrow, '账号')
            ->setCellValue('B' . $myrow, '公司')
            ->setCellValue('C' . $myrow, '姓名')
            ->setCellValue('D' . $myrow, '联系电话')
            ->setCellValue('E' . $myrow, '车辆来源')
            ->setCellValue('F' . $myrow, '车型')
            ->setCellValue('G' . $myrow, '车牌')
            ->setCellValue('H' . $myrow, '押金')
            ->setCellValue('I' . $myrow, '欠租期间')
            ->setCellValue('J' . $myrow, '金额')
            ->setCellValue('K' . $myrow, '备注');
        //浏览器交互 导出
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="月租欠款信息导入模板表.xlsx"');
        header('Cache-Control: max-age=0');
        // If you're serving to IE 9, then the following may be needed
        header('Cache-Control: max-age=1');

        // If you're serving to IE over SSL, then the following may be needed
        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter->save('php://output');
        exit;
    }
}